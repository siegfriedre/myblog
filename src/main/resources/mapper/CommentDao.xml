<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.siegfried.blog.dao.CommentDao">

    <select id="listComments" resultType="com.siegfried.blog.dto.CommentDTO">
        select
        c.id,c.comment_content,c.create_time,c.user_id,
        u.nickname,u.avatar,u.web_site
        from
        tb_comment c
        join tb_user_info u on c.user_id = u.id
        where
        <if test="articleId != null">
            article_id = #{articleId}
        </if>
        <if test="articleId == null">
            article_id is NULL
        </if>
        and c.is_delete = 0
        and c.parent_id is NULL
        order by create_time desc
        limit #{current},10
    </select>

    <select id="listReplies" resultType="com.siegfried.blog.dto.ReplyDTO">
        select
        *
        from (
        select
        c.id,c.comment_content,c.create_time,c.parent_id,c.reply_id,c.user_id,
        u.nickname,u.avatar,u.web_site,
        r.nickname as reply_nickname,
        r.web_site as reply_web_site,
        row_number () over (partition by parent_id order by create_time asc ) row_num
        from tb_comment c
        join tb_user_info u on c.user_id = u.id
        join tb_user_info r on c.reply_id = r.id
        where
        c.is_delete = 0
        and
        parent_id in(
        <foreach collection="commentIdList" item="commentId" separator=",">
            #{commentId}
        </foreach>
        )
        ) t
        where
        3 > row_num
    </select>

    <select id="listReplyCountByCommentId" resultType="com.siegfried.blog.dto.ReplyCountDTO">
        select
        parent_id as comment_id,
        count(1) as reply_count
        from
        tb_comment
        where
        is_delete = 0
        and
        parent_id in(
        <foreach collection="commentIdList" item="commentId" separator=",">
            #{commentId}
        </foreach>
        )
        group by
        parent_id
    </select>

    <select id="listRepliesByCommentId" resultType="com.siegfried.blog.dto.ReplyDTO">
        select
        c.id,c.comment_content,c.create_time,c.user_id,
        u.nickname,u.avatar,u.web_site,
        r.nickname as reply_nickname,
        r.web_site as reply_web_site
        from tb_comment c
        join tb_user_info u on c.user_id = u.id
        join tb_user_info r on c.reply_id = r.id
        where
        c.is_delete = 0
        <if test="commentId != null">
            and c.parent_id = #{commentId}
        </if>
        order by create_time asc
        limit #{current},5
    </select>

    <select id="listCommentBackDTO" resultType="com.siegfried.blog.dto.CommentBackDTO">
        select
        c.id,c.comment_content,c.create_time,c.is_delete,
        u.nickname,u.avatar,
        r.nickname as reply_nickname,
        a.article_title
        from tb_comment c
        left join tb_article a on c.article_id = a.id
        left join tb_user_info u on c.user_id = u.id
        left join tb_user_info r on c.reply_id = r.id
        where
            c.is_delete = #{conditionVO.isDelete}
            and c.article_id is not null
            <if test="conditionVO.keywords != null">
                and u.nickname like concat('%',#{condition.keywords},'%')
                or c.comment_content like concat('%',#{condition.keywords},'%')
            </if>
        order by create_time desc
        limit #{conditionVO.current},#{conditionVO.size}
    </select>

    <select id="countCommentDTO" resultType="java.lang.Integer">
        select
        count(1)
        from
        tb_comment c
        join tb_user_info u on u.id = c.user_id
        where
            c.is_delete = #{conditionVO.isDelete}
            <if test="conditionVO.keywords != null">
                and u.nickname like concat('%',#{conditionVO.keywords},'%')
                or c.comment_content like concat('%',#{condition.keywords},'%')
            </if>
    </select>

    <select id="listMessageBackDTO" resultType="com.siegfried.blog.dto.CommentBackDTO">
        select
        c.id,c.comment_content,c.create_time,c.is_delete,
        u.nickname,u.avatar,
        r.nickname as reply_nickname
        from tb_comment c
        left join tb_user_info u on c.user_id = u.id
        left join tb_user_info r on c.reply_id = r.id
        where
        c.is_delete = #{conditionVO.isDelete}
        and c.article_id is null
        <if test="conditionVO.keywords != null">
            and u.nickname like concat('%',#{condition.keywords},'%')
            or c.comment_content like concat('%',#{condition.keywords},'%')
        </if>
        order by create_time desc
        limit #{conditionVO.current},#{conditionVO.size}
    </select>
</mapper>